import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import Listcategories from './Listcategories';
import { BrowserRouter } from 'react-router-dom';

// Utilise un wrapper pour simuler le Router
const renderWithRouter = (ui) => {
  return render(<BrowserRouter>{ui}</BrowserRouter>);
};

describe('Listcategories', () => {
  beforeEach(() => {
    // Injecter des catégories de test dans localStorage avant chaque test
    const fakeCategories = [
      {
        _id: '1',
        nomcategorie: 'TestCat1',
        imagecategorie: 'http://example.com/image1.jpg',
      },
      {
        _id: '2',
        nomcategorie: 'TestCat2',
        imagecategorie: 'http://example.com/image2.jpg',
      },
    ];
    localStorage.setItem('categories', JSON.stringify(fakeCategories));
  });

  afterEach(() => {
    localStorage.clear();
  });

  it('affiche les catégories correctement', () => {
    renderWithRouter(<Listcategories />);
    expect(screen.getByText('TestCat1')).toBeInTheDocument();
    expect(screen.getByText('TestCat2')).toBeInTheDocument();
    expect(screen.getAllByRole('img')).toHaveLength(2);
  });

  it('supprime une catégorie après confirmation', () => {
    // Mock window.confirm
    window.confirm = jest.fn(() => true);

    renderWithRouter(<Listcategories />);
    const deleteButtons = screen.getAllByText(/Delete/i);
    fireEvent.click(deleteButtons[0]);

    expect(screen.queryByText('TestCat1')).not.toBeInTheDocument();
    expect(window.confirm).toHaveBeenCalledWith("Êtes-vous sûr de vouloir supprimer ?");
  });

  it('ne supprime pas si annulation dans confirm', () => {
    window.confirm = jest.fn(() => false);
    renderWithRouter(<Listcategories />);
    const deleteButtons = screen.getAllByText(/Delete/i);
    fireEvent.click(deleteButtons[0]);

    // Toujours présent
    expect(screen.getByText('TestCat1')).toBeInTheDocument();
  });

  it('doit contenir un bouton Add qui redirige', () => {
    renderWithRouter(<Listcategories />);
    const addButton = screen.getByText('Add');
    expect(addButton.closest('a')).toHaveAttribute('href', '/categories/add');
  });
});
